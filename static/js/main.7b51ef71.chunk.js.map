{"version":3,"sources":["components/Header/index.js","config/dataItems.js","components/CreateEmployee/index.js","components/EmployeeHeader/index.js","components/Table/TableHeader/index.js","components/Table/TableRow/index.js","components/Table/index.js","components/EmployeePortal/index.js","App.js","serviceWorker.js","reducer/index.js","index.js"],"names":["Header","headerHeight","className","style","height","src","alt","dataItems","connect","state","nextId","dispatch","addEmployee","employeeDetails","type","payload","hideModal","useState","jobTitleName","firstName","lastName","preferredFullName","region","dob","phoneNumber","emailAddress","setState","showErrorMessage","setShowErrorMessage","value","onChange","event","target","onClick","id","employeeCode","updateFilters","filters","showCreateEmployeeModal","setShowCreateEmployeeModal","selectedKey","filterState","setFilterState","filter","searchable","map","name","attributeName","TableHeader","widthClass","key","TableRow","props","employeesList","filteredList","item","console","log","toString","startsWith","data","EmployeePortal","initilizeList","length","useEffect","fetch","then","res","json","Boolean","window","location","hostname","match","employeeManagement","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b51ef71.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst Header = ({headerHeight}) =>{\n  return (\n    <header className=\"header-container\" style={{height:headerHeight}}>\n        <div className='left-header'>\n            <img  className='logo-image' src='https://lh3.googleusercontent.com/CW8cdSS9_3M489_2iwKQOlQGJxsvvCnJdZVfECE7dwEyGTlOjftOW9sKvESf48Bydg5D' alt='logo-image' />\n            <div className='abc-bank-label'>ABC BANK</div>\n            <div className='control-center'>CONTROL CENTER</div>\n        </div>\n        <div className='right-header'>\n            <img className='squares-image' src='https://image.flaticon.com/icons/svg/59/59628.svg' alt='9-square-image' /> \n            <img className='logged-in-user-image' src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTUsoakftmf6A5PVKLwpeG-yfLmlXgdMzQeJw-N4dxi0UmYt4bB&s' alt='logged-in-user' />\n        </div>\n      \n    </header>\n  );\n}\n\nexport default Header;\n","const dataItems = [\n    {\n        \"id\": 1,\n        \"name\": \"ID\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-50\",\n        \"attributeName\": \"id\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"FullName\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"preferredFullName\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Employee Code\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-125\",\n        \"attributeName\": \"employeeCode\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Job Title\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"jobTitleName\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Phone Number\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-125\",\n        \"attributeName\": \"phoneNumber\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Email ID\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"emailAddress\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Region\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-75\",\n        \"attributeName\": \"region\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"DOB\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"dob\"\n    }\n\n] ;\n\nexport default dataItems;","import React, {useState} from 'react';\nimport './style.css';\nimport { connect } from \"react-redux\";\n\nconst CreateEmployee = ({nextId, addEmployee, hideModal}) =>{\n\n    const [state , setState] = useState({\n        jobTitleName: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        preferredFullName: \"\",\n        region: \"\",\n        dob: \"\",\n        phoneNumber: \"\",\n        emailAddress: \"\"\n        })\n\n    const [showErrorMessage, setShowErrorMessage] = useState(false)\n\n    const clearHandler = () => {\n        setState({\n            jobTitleName: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            preferredFullName: \"\",\n            region: \"\",\n            dob: \"\",\n            phoneNumber: \"\",\n            emailAddress: \"\"\n            })\n    }\n\n    const addEmployeeHandler = () => {\n        const {jobTitleName,firstName,lastName,preferredFullName,region,dob,phoneNumber,emailAddress}=state\n        if(jobTitleName &&\n        firstName &&\n        lastName &&\n        preferredFullName &&\n        region &&\n        dob &&\n        phoneNumber &&\n        emailAddress){\n            addEmployee({...state,id:nextId,employeeCode: 'E'+nextId},nextId+1)\n            setShowErrorMessage(false)\n            hideModal()\n        }\n        else {\n            setShowErrorMessage(true)\n        }\n       \n    }\n\n  return (\n      <>\n        <div className='overlay' />\n        <div className='create-employee-container'>\n            <div className='create-employee-label'>Create Employee</div>\n            { showErrorMessage && <div className='row error-message'>\n               Please Fill All the employeeDetails\n            </div>}\n            <div className='row'>\n                <label className='label-form'>First Name</label>\n                    <input type='text' className='text-box' value={state.firstName} onChange={(event)=>setState({...state,firstName:event.target.value,preferredFullName: event.target.value + ' ' + state.lastName})}/>\n            </div>\n            <div className='row'>\n                <label className='label-form' >Last Name</label>\n                    <input type='text' className='text-box' value={state.lastName} onChange={(event)=>setState({...state,lastName:event.target.value,preferredFullName:  state.firstName + ' ' + event.target.value})}/>\n            </div>\n            <div className='row'>\n                <label className='label-form'>Job Title</label>\n                    <input type='text' className='text-box' value={state.jobTitleName} onChange={(event)=>setState({...state, jobTitleName: event.target.value})}/>\n            </div>\n            <div className='row'>\n                <label className='label-form'>Email</label>\n                    <input type='text' className='text-box' value={state.emailAddress} onChange={(event)=>setState({...state, emailAddress: event.target.value})}/>\n            </div>\n            <div className='row'>\n                <label className='label-form'>Phone Number</label>\n                    <input type='text' className='text-box' value={state.phoneNumber} onChange={(event)=>setState({...state, phoneNumber: event.target.value})}/>\n            </div>\n            <div className='row'>\n                <label className='label-form'>Region</label>\n                    <input type='text' className='text-box' value={state.region} onChange={(event)=>setState({...state, region: event.target.value})}/>\n            </div>\n            <div className='row'>\n                <label className='label-form'>DOB</label>\n                    <input type='text' className='text-box' value={state.dob} onChange={(event)=>setState({...state, dob: event.target.value})}/>\n            </div>\n\n            <div className='row'>\n                <div className='save-btn btn' onClick={addEmployeeHandler}>Save</div>\n                <div className='clear-btn btn' onClick={clearHandler}>Clear</div>\n                <div className='clear-btn btn' onClick={hideModal}>Close</div>\n            </div>\n\n        </div>\n      </>\n    \n  );\n}\n\nfunction mapStateToProps(state) {\n    const {nextId} = state\n  \n    return {\n      nextId\n    };\n  }\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      addEmployee : (employeeDetails,nextId) => dispatch({\n        type: 'ADD_EMPLOYEE',\n        payload : {employeeDetails, nextId}\n      })\n    }\n    \n  }\n  \n  export default connect(mapStateToProps,mapDispatchToProps)(CreateEmployee);\n","import React, {useState} from 'react';\nimport dataItems from '../../config/dataItems';\nimport CreateEmployee from '../CreateEmployee';\nimport { connect } from \"react-redux\";\n\nimport './style.css';\n\n\nconst EmployeeHeader = ({updateFilters}) =>{\n\n    const [ showCreateEmployeeModal,setShowCreateEmployeeModal] = useState(false)\n    const [filterState,setFilterState] = useState({selectedKey:'id',value: ''})\n\n    const onFilterChange = (event) =>{\n        setFilterState({...filterState,value: event.target.value})\n        updateFilters({...filterState,value: event.target.value})\n    }\n    const onDropDownChange = (event) => {\n        setFilterState({selectedKey:event.target.value,value: ''})\n        updateFilters({selectedKey:event.target.value,value: ''})\n    }\n  return (\n      <>\n        <div className='employee-header-container'>\n            <div className='employee-label'> Employee</div> \n            <div className='create-emp-btn' onClick={()=>setShowCreateEmployeeModal(true)}>Create Employee</div>\n        </div>\n        <div className='search-bar-container'>\n        <select onChange={onDropDownChange}>\n            {dataItems.filter(({searchable}) => searchable).map( ({name,attributeName}) => <option value={attributeName}>{name}</option>)}\n        </select>\n        <input type='text' value={filterState.value} onChange={onFilterChange}/>\n        </div>\n        {showCreateEmployeeModal && <CreateEmployee hideModal={()=>setShowCreateEmployeeModal(false)}/>}\n      </>\n    \n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n      updateFilters : (filters) => dispatch({\n        type: 'UPDATE_FILTERS',\n        payload : filters\n      })\n    }\n    \n  }\n  \n  export default connect(null,mapDispatchToProps)(EmployeeHeader);\n\n","import React from 'react';\nimport dataItems from '../../../config/dataItems'\nimport './style.css';\n\nconst TableHeader = () =>{\n  return (\n      <div className='table-header-container'>\n        {dataItems.map( ({id,name,widthClass}) => <div className={widthClass} key={id}>{name}</div>)}\n        <div className='wd-50'/>\n      </div>\n    \n  );\n}\n\nexport default TableHeader;\n","import React from 'react';\nimport dataItems from '../../../config/dataItems'\nimport './style.css';\n\nconst TableRow = (props) =>{\n  return (\n      <div className='table-row-container'>\n        {dataItems.map( ({id,widthClass,attributeName}) => <div className={widthClass+ ' label'} key={id}>{props[attributeName]}</div>)}\n        <div className='wd-50'>...</div>\n      </div>\n    \n  );\n}\n\nexport default TableRow;\n","import React from 'react';\nimport './style.css';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport { connect } from 'react-redux'\n\nconst Table = ({employeesList,selectedKey,value}) =>{\n\n  const filteredList = employeesList.filter(\n    item => {\n      console.log(item)\n      return item[selectedKey].toString().startsWith(value)})\n  return (\n      <div className='table-style'>\n        <TableHeader/>\n        {filteredList.map( (data) => <TableRow key={data.id} {...data}/>)}\n      </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n    const {employeesList,filters:{selectedKey,value}} = state\n  \n    return {\n      employeesList,\n      selectedKey,\n      value\n    };\n  }\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport EmployeeHeader from '../EmployeeHeader'\nimport './style.css';\nimport Table from '../Table';\n\nconst EmployeePortal = () =>{\n  return (\n    <div className=\"employee-portal-container\" >\n        <EmployeeHeader/>\n        <Table/>\n    </div>\n  );\n}\n\nexport default EmployeePortal;\n","import React, {useEffect} from 'react';\nimport Header from './components/Header'\nimport EmployeePortal from './components/EmployeePortal'\nimport './App.css';\nimport { connect } from \"react-redux\";\n\nfunction App({initilizeList}) {\n  useEffect(()=>{\n    fetch('https://my-json-server.typicode.com/darshanp40/employeedb/employees')\n    .then(res => res.json())\n    .then(([employeesList]) => initilizeList(employeesList))\n  },[])\n  const headerHeight = '50px';\n  return (\n    <div className=\"App\">\n      <Header headerHeight={headerHeight}/>\n      <EmployeePortal/>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initilizeList : (employeesList) => dispatch({\n      type: 'INITILIZE_EMPLOYEES',\n      payload : {employeesList, nextId: employeesList.length +1}\n    })\n  }\n  \n}\n\nexport default connect(null,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { bindActionCreators } from \"redux\";\n\nconst employeeManagement = (state = {\n    employeesList: [],\n    nextId: 1,\n    filters: {\n      selectedKey: 'id',\n      value: ''\n    }\n}, action) => {\n    switch(action.type) {\n       case 'INITILIZE_EMPLOYEES':\n          const {nextId,employeesList} = action.payload\n         return {...state,employeesList, nextId};\n     \n       case 'UPDATE_EMPLOYEES':\n         return {...state,employeesList:action.payload};\n      case 'ADD_EMPLOYEE':{\n        const {nextId,employeeDetails} = action.payload\n         return {...state,employeesList:[...state.employeesList,employeeDetails], nextId};\n      }\n      case 'UPDATE_FILTERS':{\n        return {...state, filters: action.payload}\n      }\n       default:\n         return state;\n     }\n  };\n\n  export default employeeManagement","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport employeeManagement from './reducer'\n\nconst store = createStore(employeeManagement);\n\nReactDOM.render(<Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}