{"version":3,"sources":["components/Header/index.js","config/dataItems.js","components/EmployeeHeader/index.js","components/Table/TableHeader/index.js","components/Table/TableRow/index.js","components/Table/index.js","components/EmployeePortal/index.js","App.js","serviceWorker.js","reducer/index.js","index.js"],"names":["Header","headerHeight","className","style","height","src","alt","dataItems","EmployeeHeader","filter","searchable","map","name","value","type","TableHeader","id","widthClass","key","TableRow","props","attributeName","connect","state","employeesList","data","EmployeePortal","dispatch","initilizeList","payload","useEffect","fetch","then","res","json","Boolean","window","location","hostname","match","employeeManagement","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.852d24cb.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst Header = ({headerHeight}) =>{\n  return (\n    <header className=\"header-container\" style={{height:headerHeight}}>\n        <div className='left-header'>\n            <img  className='logo-image' src='https://lh3.googleusercontent.com/CW8cdSS9_3M489_2iwKQOlQGJxsvvCnJdZVfECE7dwEyGTlOjftOW9sKvESf48Bydg5D' alt='logo-image' />\n            <div className='abc-bank-label'>ABC BANK</div>\n            <div className='control-center'>CONTROL CENTER</div>\n        </div>\n        <div className='right-header'>\n            <img className='squares-image' src='https://image.flaticon.com/icons/svg/59/59628.svg' alt='9-square-image' /> \n            <img className='logged-in-user-image' src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTUsoakftmf6A5PVKLwpeG-yfLmlXgdMzQeJw-N4dxi0UmYt4bB&s' alt='logged-in-user' />\n        </div>\n      \n    </header>\n  );\n}\n\nexport default Header;\n","const dataItems = [\n    {\n        \"id\": 1,\n        \"name\": \"ID\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-50\",\n        \"attributeName\": \"id\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"FullName\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"preferredFullName\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Employee Code\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-125\",\n        \"attributeName\": \"employeeCode\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Job Title\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"jobTitleName\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Phone Number\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-125\",\n        \"attributeName\": \"phoneNumber\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Email ID\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"emailAddress\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Region\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-75\",\n        \"attributeName\": \"region\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"DOB\",\n        \"searchable\": true,\n        \"widthClass\" : \"wd-100\",\n        \"attributeName\": \"dob\"\n    }\n\n] ;\n\nexport default dataItems;","import React from 'react';\nimport dataItems from '../../config/dataItems'\nimport './style.css';\n\nconst EmployeeHeader = ({headerHeight}) =>{\n  return (\n      <>\n        <div className='employee-header-container'>\n            <div className='employee-label'> Employee</div>\n            <div className='create-emp-btn'>Create Employee</div>\n        </div>\n        <div className='search-bar-container'>\n        <select>\n            {dataItems.filter(({searchable}) => searchable).map( ({name}) => <option value={name}>{name}</option>)}\n        </select>\n        <input type='text'/>\n        </div>\n      </>\n    \n  );\n}\n\nexport default EmployeeHeader;\n","import React from 'react';\nimport dataItems from '../../../config/dataItems'\nimport './style.css';\n\nconst TableHeader = () =>{\n  return (\n      <div className='table-header-container'>\n        {dataItems.map( ({id,name,widthClass}) => <div className={widthClass} key={id}>{name}</div>)}\n        <div className='wd-50'/>\n      </div>\n    \n  );\n}\n\nexport default TableHeader;\n","import React from 'react';\nimport dataItems from '../../../config/dataItems'\nimport './style.css';\n\nconst TableRow = (props) =>{\n  return (\n      <div className='table-row-container'>\n        {dataItems.map( ({id,widthClass,attributeName}) => <div className={widthClass+ ' label'} key={id}>{props[attributeName]}</div>)}\n        <div className='wd-50'>...</div>\n      </div>\n    \n  );\n}\n\nexport default TableRow;\n","import React from 'react';\nimport './style.css';\nimport TableHeader from './TableHeader';\nimport TableRow from './TableRow';\nimport { connect } from 'react-redux'\n\nconst Table = ({employeesList}) =>{\n  return (\n      <div className='table-style'>\n        <TableHeader/>\n        {employeesList.map( (data) => <TableRow key={data.id} {...data}/>)}\n      </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n    const {employeesList} = state\n  \n    return {\n      employeesList\n    };\n  }\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport EmployeeHeader from '../EmployeeHeader'\nimport './style.css';\nimport Table from '../Table';\n\nconst EmployeePortal = ({headerHeight}) =>{\n  return (\n    <div className=\"employee-portal-container\" >\n        <EmployeeHeader/>\n        <Table/>\n    </div>\n  );\n}\n\nexport default EmployeePortal;\n","import React, {useEffect} from 'react';\nimport Header from './components/Header'\nimport EmployeePortal from './components/EmployeePortal'\nimport './App.css';\nimport { connect } from \"react-redux\";\n\nfunction App({initilizeList}) {\n  useEffect(()=>{\n    fetch('https://my-json-server.typicode.com/darshanp40/employeedb/employees')\n    .then(res => res.json())\n    .then(([employeesList]) => initilizeList(employeesList))\n  },[])\n  const headerHeight = '50px';\n  return (\n    <div className=\"App\">\n      <Header headerHeight={headerHeight}/>\n      <EmployeePortal/>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    initilizeList : (employeesList) => dispatch({\n      type: 'INITILIZE_EMPLOYEES',\n      payload : employeesList\n    })\n  }\n  \n}\n\nexport default connect(null,mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const employeeManagement = (state = {\n    employeesList: []\n}, action) => {\n    switch(action.type) {\n       case 'INITILIZE_EMPLOYEES':\n         return {...state,employeesList:action.payload};\n     \n       case 'UPDATE_EMPLOYEES':\n         return {...state,employeesList:action.payload};\n       default:\n         return state;\n     }\n  };\n\n  export default employeeManagement","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport employeeManagement from './reducer'\n\nconst store = createStore(employeeManagement);\n\nReactDOM.render(<Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}